# Use an official Rust image as a parent image
FROM rust:latest as builder

# Create a new directory for the application code
WORKDIR /usr/src/myapp

# Update package index and install required tools
RUN apt-get update && apt-get install -y libsqlite3-dev

# Install sqlx-cli with the necessary features
RUN cargo install sqlx-cli

# Define the runtime image
FROM debian:bookworm-slim

# Install libssl which may be needed by sqlx-cli
RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy sqlx executable from the builder stage
COPY --from=builder /usr/local/cargo/bin/sqlx /usr/local/bin/sqlx

# Set the working directory
WORKDIR /migrations

# Copy your migration files into the image
COPY ./migrations ./migrations

COPY docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Set entrypoint to custom script
ENTRYPOINT ["docker-entrypoint.sh"]