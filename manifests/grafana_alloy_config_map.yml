apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-alloy-config
  namespace: examples
data:
  config.alloy: |
    otelcol.receiver.otlp "example" {
      grpc {
        endpoint = "0.0.0.0:4317"
      }

      http {
        endpoint = "0.0.0.0:4318"
      }
    
      output {
        metrics = [otelcol.processor.batch.example.input]
        logs    = [otelcol.processor.batch.example.input]
        traces  = [otelcol.processor.batch.example.input]
      }
    }

    otelcol.processor.batch "example" {
      output {
        metrics = [otelcol.exporter.prometheus.local_metrics.input]
        logs    = [otelcol.exporter.loki.local_logs.input]
        traces  = [otelcol.exporter.otlp.local_traces.input]
      }
    }

    otelcol.exporter.otlp "local_traces" {
      client {
        endpoint = "otel-collector-traces.example.svc.cluster.local:4317"
      }
    }

    otelcol.exporter.prometheus "local_metrics" {
      forward_to = [prometheus.remote_write.local_metrics.receiver]
    }

    prometheus.remote_write "local_metrics" {
      endpoint {
        url = "http://prometheus-stack-kube-prom-prometheus.monitoring.local/api/v1/write"
      }
    }

    otelcol.exporter.loki "local_logs" {
      forward_to = [loki.write.local_logs.receiver]
    }

    loki.write "local_logs" {
      endpoint {
        url = "http://loki.loki:3100/loki/api/v1/push"
      }
    }
    
    // Receives profiles over HTTP
    pyroscope.receive_http "default" {
       http {
           listen_address = "0.0.0.0"
           listen_port = 9999
       }
       forward_to = [pyroscope.write.backend.receiver]
    }

    // Forwards profiles to Pyroscope
    pyroscope.write "backend" {
       endpoint {
           url = "http://pyroscope-ingester.pyroscope:4040"
       }
    }